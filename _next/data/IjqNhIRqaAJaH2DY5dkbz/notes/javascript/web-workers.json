{"pageProps":{"noteKey":["javascript","web-workers"],"note":{"title":"JavaScript Web Workers","date":"2022-06-03","content":"\n<p>\n  <code>Web worker</code> is a separate JS thread, working in parallel with the main thread and communicating with\n  it using messaging system.\n</p>\n<p>\n  In browser to create web worker, we need to have two separate JS files. For example <code>app.js</code> and\n  <code>worker.js</code>. This is required, because these files will be executed in separate threads. And also\n  worker js file will be required to create worker object.\n</p>\n<p>To to that, add following code to the <code>app.js</code> file:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">let</span> worker = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Worker</span>(<span class=\"hljs-string\">'./worker.js'</span>);\n\nworker.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">'message'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =></span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">`Worker said: <span class=\"hljs-subst\">${event.data}</span>`</span>);\n})\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Saying \"Hi\" to worker'</span>);\nworker.<span class=\"hljs-title function_\">postMessage</span>(<span class=\"hljs-string\">'Hi, worker!'</span>);\n\n<span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =></span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Requesting worker\\'s status'</span>);\n    worker.<span class=\"hljs-title function_\">postMessage</span>(<span class=\"hljs-string\">'Hey, worker, how\\'s it going?'</span>);\n\n    <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =></span> {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">'Signalling about end of workday'</span>);\n        worker.<span class=\"hljs-title function_\">postMessage</span>(<span class=\"hljs-string\">'Work day is over'</span>);\n    }, <span class=\"hljs-number\">100</span>);\n}, <span class=\"hljs-number\">100</span>);\n</code></pre>\n<p>and to the <code>worker.js</code>:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">'message'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">event</span>) =></span> {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_\">isWorkOver</span>(event.<span class=\"hljs-property\">data</span>)) {\n        <span class=\"hljs-title function_\">postMessage</span>(<span class=\"hljs-string\">'Bie, until tomorrow!'</span>);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_\">close</span>();\n    }\n\n    <span class=\"hljs-keyword\">var</span> response = <span class=\"hljs-title function_\">getResponse</span>(event.<span class=\"hljs-property\">data</span>);\n    <span class=\"hljs-title function_\">postMessage</span>(response);\n});\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">isWorkOver</span>(<span class=\"hljs-params\">message</span>) {\n    <span class=\"hljs-keyword\">return</span> message === <span class=\"hljs-string\">'Work day is over'</span>;\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getResponse</span>(<span class=\"hljs-params\">message</span>) {\n    <span class=\"hljs-keyword\">if</span> (message === <span class=\"hljs-string\">'Hi, worker!'</span>) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'Hi, main!'</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'I\\'m working...'</span>;\n    }\n}\n</code></pre>\n<p>Here main thread sends to worker different messages and has an event listener for worker's messages.</p>\n<p>\n  Important to note, that workers have separate call stack and heap, so passing messages send a copy\n  of data. It is not possible to share data by reference.\n</p>\n<p>\n  To test it locally better to use some server, because it is not possible to run workers from local\n  file system by security concerns. At least in Chrome.\n</p>\n<h2>References</h2>\n<ul>\n  <li><a href=\"https://html.spec.whatwg.org/multipage/workers.html\">https://html.spec.whatwg.org/multipage/workers.html</a></li>\n</ul>\n"}},"__N_SSG":true}