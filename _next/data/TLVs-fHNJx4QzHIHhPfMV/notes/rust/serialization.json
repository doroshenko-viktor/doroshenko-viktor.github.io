{"pageProps":{"noteKey":["rust","serialization"],"note":{"title":"Rust Serialization/Deserialization","date":"2022-03-03","content":"\n<h2>Attributes</h2>\n<h2>Container Attributes</h2>\n<p>These are <code>serde</code> attributes placed on top of target struct.</p>\n<ul>\n  <li>\n    <p>\n      <code>#[serde(rename_all = \"&#x3C;value>\")]</code> - this attribute allows to specify format of <code>json</code> keys.\n      Possible <code>&#x3C;value></code>s are:\n    </p>\n    <ul>\n      <li><code>lowercase</code></li>\n      <li><code>UPPERCASE</code></li>\n      <li><code>PascalCase</code></li>\n      <li><code>camelCase</code></li>\n      <li><code>snake_case</code></li>\n      <li><code>SCREAMING_SNAKE_CASE</code></li>\n      <li><code>kebab-case</code></li>\n      <li><code>SCREAMING-KEBAB-CASE</code></li>\n    </ul>\n    <pre><code class=\"hljs language-rust\">  <span class=\"hljs-comment\">//{</span>\n  <span class=\"hljs-comment\">//    \\\"someKey1\\\": \\\"v1\\\",</span>\n  <span class=\"hljs-comment\">//    \\\"someKey2\\\": 8</span>\n  <span class=\"hljs-comment\">//}</span>\n\n  <span class=\"hljs-meta\">#[derive(Deserialize, Serialize, Debug)]</span>\n  <span class=\"hljs-meta\">#[serde(rename_all = <span class=\"hljs-string\">\"camelCase\"</span>)]</span>\n  <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">T</span> {\n      <span class=\"hljs-keyword\">pub</span> some_key_1: <span class=\"hljs-type\">String</span>,\n      <span class=\"hljs-keyword\">pub</span> some_key_2: <span class=\"hljs-type\">u8</span>,\n  }\n</code></pre>\n  </li>\n</ul>\n<h2>Field Attributes</h2>\n<p>These are attributes, placed on fields of <code>structs</code> or <code>enum</code> variants:</p>\n<ul>\n  <li>\n    <p>\n      <strong>rename:</strong> - allows to rename some field on serialization/deserialization and separately\n      for each of them:\n    </p>\n    <pre><code class=\"hljs language-rust\">  <span class=\"hljs-meta\">#[derive(Deserialize, Serialize, Debug)]</span>\n  <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">T</span> {\n      <span class=\"hljs-meta\">#[serde(rename(serialize = <span class=\"hljs-string\">\"SERIALIZE_KEY\"</span>, deserialize = <span class=\"hljs-string\">\"other_KEY\"</span>))]</span>\n      <span class=\"hljs-keyword\">pub</span> some_key_1: <span class=\"hljs-type\">String</span>,\n      <span class=\"hljs-meta\">#[serde(rename = <span class=\"hljs-string\">\"key2\"</span>)]</span>\n      <span class=\"hljs-keyword\">pub</span> some_key_2: <span class=\"hljs-type\">u8</span>,\n  }\n\n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">json</span> = <span class=\"hljs-string\">\"{\n      \\\"other_KEY\\\": \\\"v1\\\",\n      \\\"key2\\\": 8\n  }\"</span>;\n\n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">t</span>: T = serde_json::<span class=\"hljs-title function_ invoke__\">from_str</span>(&#x26;json)?;\n  dbg!(&#x26;t);\n  <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\"></span><span class=\"hljs-variable\">serialized</span> = serde_json::<span class=\"hljs-title function_ invoke__\">to_string</span>(&#x26;t)?;\n  dbg!(&#x26;serialized);\n  <span class=\"hljs-title function_ invoke__\">Ok</span>(serialized)\n</code></pre>\n    <p>where <code>serialized</code> will be:</p>\n    <pre><code class=\"hljs language-rust\">{<span class=\"hljs-string\">\"SERIALIZE_KEY\"</span>:<span class=\"hljs-string\">\"v1\"</span>,<span class=\"hljs-string\">\"key2\"</span>:<span class=\"hljs-number\">8</span>}\n</code></pre>\n  </li>\n  <li>\n    <p>\n      <strong>alias:</strong> - specifies possible alias for property name, but it leaves possibility to\n      serialize/deserialize also with native Rust's struct field name.\n    </p>\n  </li>\n  <li>\n    <p>\n      <strong>skip:</strong> - don't serialize/deserialize specified field. It has also more narrow <code>skip_serializing</code>\n      and <code>skip_deserializing</code>.\n    </p>\n  </li>\n</ul>\n"}},"__N_SSG":true}