{"pageProps":{"noteKey":["linux","apt"],"note":{"title":"Debian APT","date":"2023-04-09","content":"\n<h2>Repositories</h2>\n<p>Debian provides a number of source code repositories for various components of the operating system. Here are the main ones:</p>\n<ul>\n  <li><code>Main repository</code>: This repository contains the core Debian packages that are officially supported by the Debian project.</li>\n  <li>\n    <code>Contrib repository</code>: This repository contains packages that are not officially supported by the Debian project, but are\n    still free and open source software.\n  </li>\n  <li>\n    <code>Non-free</code> repository: This repository contains packages that are not free and open source software, but are still\n    redistributable under certain conditions.\n  </li>\n  <li>\n    <code>Backports</code> repository: This repository contains packages that have been backported from newer versions of Debian to older\n    releases.\n  </li>\n  <li><code>Security updates repository</code>: This repository contains security updates for Debian packages.</li>\n  <li><code>Proposed-updates repository</code>: This repository contains packages that have been tested and are ready to be released as updates.</li>\n  <li>\n    <code>Experimental repository</code>: This repository contains packages that are not yet stable enough to be included in the official\n    Debian repositories, but may be useful for testing or development purposes.\n  </li>\n</ul>\n<p>\n  In sources files the <code>deb</code> lines are used for installing packages, while the <code>deb-src</code> lines are used for downloading source\n  code for packages.\n</p>\n<p><strong>Adding new repositories:</strong></p>\n<p>\n  To add a repository to <code>APT</code> on Debian-based systems, you can follow these steps:\n  Identify the repository you want to add.\n  Open the <code>sources.list</code> file in a text editor with administrative privileges. The file is located in the <code>/etc/apt/</code> directory.\n  Add the repository to the <code>sources.list</code> file by appending the repository URL to the end of the file. For example, to add the\n  official Ubuntu Universe repository, you would add the following line:\n</p>\n<pre><code class=\"hljs language-arduino\">deb http:<span class=\"hljs-comment\">//archive.ubuntu.com/ubuntu/ bionic universe</span>\n</code></pre>\n<p>\n  Here, <code>deb</code> indicates that this is a repository containing binary packages, and <code>http://archive.ubuntu.com/ubuntu/</code> is the URL\n  for the repository. <code>bionic</code> is the code name of the Debian/Ubuntu release, and <code>universe</code> is the name of the repository.\n  Save the <code>sources.list</code> file and exit the text editor. Update <code>APT</code> to refresh its package lists with the new repository:\n</p>\n<p>Example of <code>sources.list</code> for Debian:</p>\n<pre><code class=\"hljs language-ruby\">deb <span class=\"hljs-symbol\">http:</span>/<span class=\"hljs-regexp\">/deb.debian.org/debian</span><span class=\"hljs-regexp\">/ bullseye main contrib non-free\ndeb-src http:/</span><span class=\"hljs-regexp\">/deb.debian.org/debian</span><span class=\"hljs-regexp\">/ bullseye main contrib non-free\n\ndeb http:/</span><span class=\"hljs-regexp\">/security.debian.org/debian</span>-security bullseye-security main\ndeb-src <span class=\"hljs-symbol\">http:</span>/<span class=\"hljs-regexp\">/security.debian.org/debian</span>-security bullseye-security main\n\ndeb <span class=\"hljs-symbol\">http:</span>/<span class=\"hljs-regexp\">/deb.debian.org/debian</span><span class=\"hljs-regexp\">/ bullseye-updates main\ndeb-src http:/</span><span class=\"hljs-regexp\">/deb.debian.org/debian</span><span class=\"hljs-regexp\">/ bullseye-updates main\n\ndeb http:/</span><span class=\"hljs-regexp\">/deb.debian.org/debian</span><span class=\"hljs-regexp\">/ testing main\n</span></code></pre>\n<p>Update <code>apt</code> cache:</p>\n<pre><code class=\"hljs language-bash\">sudo apt update\n</code></pre>\n<p>\n  This will download the package lists from all the repositories listed in <code>sources.list</code>. You should now be able to install\n  packages from the new repository using APT. Note that adding repositories can introduce security risks and conflicts between\n  different packages, so it's important to only add repositories from trusted sources and to carefully manage any conflicts that may arise.\n</p>\n<p>To install package from specific repository:</p>\n<pre><code class=\"hljs language-bash\">sudo apt-get -t testing install firefox\n</code></pre>\n<p><strong>Preferences:</strong></p>\n<pre><code class=\"hljs language-makefile\"><span class=\"hljs-section\">Package: *</span>\n<span class=\"hljs-section\">Pin: release a=stable</span>\n<span class=\"hljs-section\">Pin-Priority: 900</span>\n\n<span class=\"hljs-section\">Package: *</span>\n<span class=\"hljs-section\">Pin: release a=main</span>\n<span class=\"hljs-section\">Pin-Priority: 800</span>\n\n<span class=\"hljs-section\">Package: *</span>\n<span class=\"hljs-section\">Pin: release a=contrib</span>\n<span class=\"hljs-section\">Pin-Priority: 700</span>\n\n<span class=\"hljs-section\">Package: *</span>\n<span class=\"hljs-section\">Pin: release a=non-free</span>\n<span class=\"hljs-section\">Pin-Priority: 600</span>\n\n<span class=\"hljs-section\">Package: *</span>\n<span class=\"hljs-section\">Pin: release a=testing</span>\n<span class=\"hljs-section\">Pin-Priority: -1</span>\n</code></pre>\n<p>To check what repository will be used by default to get package use <code>apt-cache policy &#x3C;package-name></code></p>\n"}},"__N_SSG":true}