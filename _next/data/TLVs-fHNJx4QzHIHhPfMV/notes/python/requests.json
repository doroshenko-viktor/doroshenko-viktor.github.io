{"pageProps":{"noteKey":["python","requests"],"note":{"title":"Python - Requests","date":"2023-02-05","content":"\n<p>\n  The requests module makes it easy to make <code>HTTP</code> requests in Python. Here is an example of how to make a GET request to a\n  website using the <code>requests.get()</code> function:\n</p>\n<p>\n  Copy code\n  import requests\n</p>\n<p>response = requests.get('<a href=\"https://www.example.com\">https://www.example.com</a>')</p>\n<p>\n  print(response.status_code)\n  print(response.content)\n  In this example, the requests.get() function is used to make a GET request to the website '<a href=\"https://www.example.com\">https://www.example.com</a>'. The response returned by the server is stored in the response variable. The status_code attribute of the response object can be used to check the status of the request. And response.content will give you the response content.\n</p>\n<p>You can also pass query parameters and custom headers to the GET request.</p>\n<p>\n  Copy code\n  import requests\n</p>\n<p>\n  payload = {'key1': 'value1', 'key2': 'value2'}\n  headers = {'content-type': 'application/json'}\n</p>\n<p>response = requests.get('<a href=\"https://www.example.com\">https://www.example.com</a>', params=payload, headers=headers)</p>\n<p>\n  print(response.status_code)\n  print(response.content)\n  In this example, the params attribute is used to pass query parameters to the GET request. The headers attribute is used to pass custom headers to the GET request.\n</p>\n<p>The requests module makes it easy to make POST requests in Python. Here is an example of how to make a POST request to a website using the requests.post() function:</p>\n<p>\n  Copy code\n  import requests\n</p>\n<p>\n  payload = {'key1': 'value1', 'key2': 'value2'}\n  headers = {'content-type': 'application/json'}\n</p>\n<p>response = requests.post('<a href=\"https://www.example.com\">https://www.example.com</a>', data=payload, headers=headers)</p>\n<p>\n  print(response.status_code)\n  print(response.content)\n  In this example, the requests.post() function is used to make a POST request to the website '<a href=\"https://www.example.com\">https://www.example.com</a>'. The payload data that needs to be sent is passed as the data attribute. In this example, it's a json payload. The headers attribute is used to pass custom headers to the POST request. The response returned by the server is stored in the response variable. The status_code attribute of the response object can be used to check the status of the request. And response.content will give you the response content.\n</p>\n<p>You can also pass the payload data in the form of json by using json attribute instead of data like this:</p>\n<p>\n  Copy code\n  import requests\n</p>\n<p>payload = {'key1': 'value1', 'key2': 'value2'}</p>\n<p>response = requests.post('<a href=\"https://www.example.com\">https://www.example.com</a>', json=payload)</p>\n<p>\n  print(response.status_code)\n  print(response.content)\n  It will automatically set the content-type header to application/json and also converts python dict to json payload.\n</p>\n<p>Additionally, you can also send files, multipart/form-data, etc. by using different attributes like files, data, json etc.</p>\n"}},"__N_SSG":true}