{"pageProps":{"noteKey":["infrastructure","kubernates","kubernetes_base"],"note":{"title":"kubernetes Basics","date":"2022-10-23","content":"\n<p><code>kubernetes</code> allows to run variety of different containers on multiple machines.</p>\n<p>\n  <code>Claster</code> is a combination of a <code>master</code> and one or many <code>nodes</code> which run containers. Each node may be a\n  different machine.\n</p>\n<h2>Node</h2>\n<p>\n  <code>Node</code> is a machine, running containers. It may be physical or virtual machine. Each cluster can have one or more\n  nodes. Nodes are managed by Kubernetes master node.\n</p>\n<p>Node runs at minimum process allowing master to manage that node - <code>kubelet</code> and container runtime(Docker in most cases).</p>\n<h2>Pod</h2>\n<p>\n  Minimal unit of deployment in kubernetes is <code>pod</code>. Pod contains one or more containers and some shared resources,\n  which must be deployed together or grouped by some other criteria. One pod's containers are deployed within single\n  node. If node failse same pod will be scheduled on a different node.\n</p>\n<h2>Service</h2>\n<p>\n  <code>Services</code> make it possible to discover and reach nodes. Nodes may be created, removed, updated. This may lead to\n  change of node's IP address. That is why it is not recommended to expose node to outside world directly, but using\n  service instead. Usually service is connected to necessary nodes with system of labels.\n</p>\n<p><strong>Service Types:</strong></p>\n<ul>\n  <li><code>ClusterIP</code> Exposes the Service on an internal IP in the cluster. This type makes the Service only reachable from within the cluster. Used by default.</li>\n  <li><code>NodePort</code> Exposes the Service on the same port of each selected Node in the cluster using NAT. Makes a Service accessible from outside the cluster using :. Superset of ClusterIP.</li>\n  <li><code>LoadBalancer</code> Creates an external load balancer in the current cloud (if supported) and assigns a fixed, external IP to the Service. Superset of NodePort.</li>\n  <li><code>ExternalName</code> Maps the Service to the contents of the <code>externalName</code> field (e.g. <code>foo.bar.example.com</code>), by returning a <code>CNAME</code> record with its value. No proxying of any kind is set up.</li>\n  <li><code>Ingress</code></li>\n</ul>\n<h2>Deployments</h2>\n<p>\n  <code>Deployment</code> is a configuration, which instructs Kubernetes master how to allocate instances of our application.\n  User defines desired state of running pods and deployment will make according changes.\n</p>\n<p>To get all running deployments info, run:</p>\n<pre><code class=\"hljs language-bash\">kubectl get deployments\n</code></pre>\n<p>To get replica sets, created by the deployment:</p>\n<pre><code class=\"hljs language-bash\">kubectl get rs\n</code></pre>\n<h2>Basic configuration</h2>\n<p>For local development it is recommended to use <code>minikube</code> as a Kuberantes cluster. To install it on Linux:</p>\n<pre><code class=\"hljs language-bash\">wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-&#x3C;your architecture code>\n</code></pre>\n<p>Architecture code may be for example <code>amd64</code>, <code>arm64</code>, e.t.c</p>\n<p>Copy it to executables directory:</p>\n<pre><code class=\"hljs language-bash\">sudo <span class=\"hljs-built_in\">cp</span> minikube-linux-&#x3C;architecture code> /usr/local/bin/minikube\n</code></pre>\n<p>And make it executable:</p>\n<pre><code class=\"hljs language-bash\">sudo <span class=\"hljs-built_in\">chmod</span> 755 /usr/local/bin/minikube\n</code></pre>\n<p>To check that everything is installed run <code>minikube version</code></p>\n<p>To start cluster run:</p>\n<pre><code class=\"hljs language-bash\">minikube start\n</code></pre>\n<p><strong>TODO: configure kubectl to connect a cluster</strong></p>\n<p>To check cluster status run:</p>\n<pre><code class=\"hljs language-bash\">kubectl cluster-info\n</code></pre>\n<h2>Running Configurations</h2>\n<p>To feed kubernetes configurations to cluster run:</p>\n<pre><code class=\"hljs language-bash\">kubectl apply -f &#x3C;filename>\n</code></pre>\n<p>To check status of execution:</p>\n<pre><code class=\"hljs language-bash\">kubectl get pods\n</code></pre>\n<p>Running pods could be accessible by cluster IP, which could be discovered with</p>\n<pre><code class=\"hljs language-bash\">kubectl get nodes -o wide\n</code></pre>\n<p>or</p>\n<pre><code class=\"hljs language-bash\">minikube ip\n</code></pre>\n<p>To get detailed information about Kubernetes object run:</p>\n<pre><code class=\"hljs language-bash\">kubectl describe &#x3C;object <span class=\"hljs-built_in\">type</span>> [object name]\n</code></pre>\n<p>If <code>object name</code> is omitted, all object of given type will be described.</p>\n"}},"__N_SSG":true}